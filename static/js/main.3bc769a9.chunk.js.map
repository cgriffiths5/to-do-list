{"version":3,"sources":["todoitems.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItems","this","props","checkItem","removeItem","className","entries","map","item","class","type","checked","onChange","value","id","onClick","Component","App","setState","items","state","itemAmount","completedItems","addItem","bind","clearList","e","_inputElement","newItem","preventDefault","name","filter","el","placeholder","ref","input","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAoBeA,E,4JAhBP,WACE,MAAgCC,KAAKC,MAA9BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,WAClB,OACE,oBAAIC,UAAU,UAAd,SACMJ,KAAKC,MAAMI,QAAQC,KAAI,SAACC,GACxB,OAAO,qBAAIC,MAAM,OAAV,UACA,uBAAOC,KAAK,WAAWD,MAAM,WAAWE,QAASH,EAAKG,QAASC,SAAU,kBAAMT,EAAUK,MACzF,qBAAKC,MAAM,OAAX,SAAmBD,EAAKK,QACxB,wBAAQC,GAAG,mBAAmBC,QAAS,kBAAMX,EAAWI,IAAxD,iBAHsBA,Y,GANnBQ,aC0EbC,G,wDAxEb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IA+BRC,UAAY,YAAyB,IAAtBU,EAAqB,EAArBA,MAAOF,EAAc,EAAdA,QACpB,EAAKO,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAMZ,KAAI,SAAAC,GAAI,OAAIA,EAAKK,QAAUA,EAAQ,CAAEA,QAAOF,SAAUA,GAAYH,QA/B5F,EAAKY,MAAQ,CACXD,MAAO,GACPE,WAAY,EACZC,eAAgB,GAElB,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKpB,WAAa,EAAKA,WAAWoB,KAAhB,gBAVD,E,2CAcnB,SAAQE,GAEN,GAAiC,KAA7BzB,KAAK0B,cAAcd,MAAc,CACnC,IAAIe,EAAU3B,KAAK0B,cAAcd,MAEjCZ,KAAKiB,SAAS,CACVC,MAAM,GAAD,mBAAMlB,KAAKmB,MAAMD,OAAjB,CAAwB,CAAEN,MAAOe,EAASjB,SAAS,KACxDU,WAAYpB,KAAKmB,MAAMC,WAAa,IAGxCpB,KAAK0B,cAAcd,MAAQ,GAG7Ba,EAAEG,mB,wBAYJ,SAAWC,GACT7B,KAAKiB,SAAS,CACZC,MAAOlB,KAAKmB,MAAMD,MAAMY,QAAO,SAAAC,GAAE,OAAIA,IAAOF,KAC5CT,WAAYpB,KAAKmB,MAAMC,WAAa,M,uBAKxC,WACEpB,KAAKiB,SAAS,CACZC,MAAO,GACPE,WAAY,M,oBAIhB,WAAW,IAAD,OACV,OACE,sBAAKhB,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBAAMS,GAAG,aAAT,UACE,uBAAOA,GAAG,cAAcmB,YAAY,aAAaC,IAAK,SAACC,GAAD,OAAW,EAAKR,cAAgBQ,KACtF,wBAAQrB,GAAG,gBAAgBJ,KAAK,SAASK,QAASd,KAAKsB,QAAvD,iBACA,wBAAQT,GAAG,kBAAkBJ,KAAK,SAASK,QAASd,KAAKwB,UAAzD,6BAGJ,cAAC,EAAD,CAAWnB,QAASL,KAAKmB,MAAMD,MAAOf,WAAYH,KAAKG,WAAYD,UAAWF,KAAKE,YACnF,oBAAGW,GAAG,aAAN,8BAAqCb,KAAKmB,MAAMC,cAChD,oBAAGP,GAAG,iBAAN,+BAA0Cb,KAAKmB,MAAMD,MAAMY,QAAO,SAAAvB,GAAI,OAAIA,EAAKG,WAASyB,iB,GAnE3EpB,cCQJqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,oBAAIlC,GAAG,QAAP,sBACA,oBAAIA,GAAG,cAAP,wBACA,cAAC,EAAD,OAEFmC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bc769a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./todoitems.css\";\r\n\r\n    class TodoItems extends Component {\r\n        render() {\r\n          const {checkItem, removeItem} = this.props\r\n          return (\r\n            <ul className=\"theList\">\r\n                { this.props.entries.map((item) => {\r\n                  return <li class=\"list\" key={item}>\r\n                         <input type=\"checkbox\" class=\"checkbox\" checked={item.checked} onChange={() => checkItem(item)}></input>\r\n                         <del class=\"item\">{item.value}</del>\r\n                         <button id=\"removeItemButton\" onClick={() => removeItem(item)} >X</button>\r\n                         </li>\r\n                })}\r\n            </ul>\r\n          );\r\n       }\r\n    };\r\n\r\nexport default TodoItems;","import React, { Component } from 'react';\nimport TodoItems from \"./todoitems\";\nimport './App.css';\n\n class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      itemAmount: 0,\n      completedItems: 0\n    }\n    this.addItem = this.addItem.bind(this);\n    this.clearList = this.clearList.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  //Add item to To Do List\n  addItem(e) {\n    \n    if (this._inputElement.value !== \"\") {\n      var newItem = this._inputElement.value;\n      \n      this.setState({\n          items: [...this.state.items, { value: newItem, checked: false }],\n          itemAmount: this.state.itemAmount + 1\n      });\n\n      this._inputElement.value = \"\";\n    }\n\n    e.preventDefault();\n     \n  }\n\n  //checkItem\n  checkItem = ({ value, checked }) => {\n    this.setState({\n      items: this.state.items.map(item => item.value === value ? { value, checked: !checked } : item)\n    });\n  }\n\n  //Remove item\n  removeItem(name) {\n    this.setState({\n      items: this.state.items.filter(el => el !== name),\n      itemAmount: this.state.itemAmount - 1\n    })\n  }\n  \n  //Clear whole list\n  clearList() {\n    this.setState({\n      items: [],\n      itemAmount: 0\n    })\n  }\n\n  render () {\n  return (\n    <div className=\"todoapp\">\n      <div className=\"header\">\n        <form id=\"submitform\">\n          <input id=\"inputbutton\" placeholder=\"Enter task\" ref={(input) => this._inputElement = input}></input>\n          <button id=\"additembutton\" type=\"submit\" onClick={this.addItem}>Add</button>\n          <button id=\"clearlistbutton\" type=\"submit\" onClick={this.clearList}>Clear List</button>\n        </form>\n      </div>\n      <TodoItems entries={this.state.items} removeItem={this.removeItem} checkItem={this.checkItem}/>\n      <p id=\"entrycount\">Tasks remaining: {this.state.itemAmount}</p>\n      <p id=\"completedtasks\"> Completed tasks: {this.state.items.filter(item => item.checked).length}</p>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1 id=\"title\">Memo Pad</h1>\n    <h2 id=\"description\">To do list</h2>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}